//OREDENAR MATRIZ ENQUANTO USUÁRIO DIGITA

#include <stdio.h>

int tam;

void imprimir(int mat[tam][tam]){
    for(int i=0;i<tam;i++){
        for(int j=0;j<tam;j++){
            printf("%d\t",mat[i][j]);
        }
        printf("\n");
    }
    printf("\n\n\n");
}
int main()
{
    int num,aux_i=0,aux_j=0,total=0;
    printf("ordem:");
    scanf("%d",&tam);
    int mat[tam][tam];
    
    for(int i=0;i<tam;i++){
        for(int j=0;j<tam;j++){
            mat[i][j]=0;
        }
    }
    
    while(total<(tam*tam)){
        scanf("%d",&num);
        if(aux_i==0&&aux_j==0){
            mat[0][0]=num;
            //aux_j++;
        }
        else if(aux_i==0&&aux_j==1){
            if(mat[0][0]>num){
                mat[0][1]=mat[0][0];
                mat[0][0]=num;
                //printf("jh %d",num);
            }
            else{
                mat[0][1]=num;
                //printf("jh %d",num);
            }
            //aux_j++;
        }
        else{
            //printf("auxi %d\nauxj %d",aux_i,aux_j);
            int pos_i=0,pos_j=0,j,it=0;
            //printf("pos_j %d\n",pos_j);
            while(mat[pos_i][pos_j]<num&&it<total){
                pos_j++;
                if(pos_j==tam){
                    pos_i++;
                    pos_j=0;
                }
                it++;
                //printf("\nposi %d\nposj %d",pos_i,pos_j);
            }
            printf("\nposicao insercao i: %d, posicao insercao j: %d\n\n",pos_i,pos_j);
            printf("\naux_i: %d, aux_j: %d\n\n",aux_i,aux_j);
            
            int c=0;
            
            for(int i=aux_i;i>=pos_i;i--){
                if(i==aux_i){
                    j=aux_j;
                }
                else{
                    j=tam-1;
                }
                if(i==pos_i){
                    c=pos_j;
                }
                for(;j>=c;j--){
                    // if(j==0 && i>pos_i){
                    //     mat[i][j]=mat[i-1][tam-1];
                    //     printf("caiu no if %d %d, mat[i-1][tam-1] %d\n",i,j,mat[i-1][tam-1]);
                    // }
                    // else if(j==tam-1 && i>pos_i){
                    //     if(i==aux_i){
                    //         mat[i][0]=mat[i-1][j];    
                    //     }
                    //     else{
                    //         mat[i+1][0]=mat[i-1][j];
                    //     }
                        
                    //     printf("caiu no if 2 %d %d, mat[i][j] %d\n",i,j,mat[i][j]);
                    // }
                    // else{
                    //     mat[i][j+1]=mat[i][j];
                    //     printf("caiu no if 3, %d %d, mat[i][j] %d\n",i,j,mat[i][j]);
                    // }
                    if(i==aux_i){
                        printf("caiu no if 1: %d %d\n",i,j);
                        if(j==0){
                            if(i>pos_i){
                                mat[i][j]=mat[i-1][tam-1];    
                            }else{
                                mat[i][j]=mat[i][j];
                            }
                            
                            printf("\ncaiu no 1°if\n");
                        }
                        else if(j==tam-1){
                            if(i+1<=tam-1 && i==tam-1){
                                mat[i+1][0]=mat[i][j];
                                //mat[i][j]=mat[i][j-1];
                                printf("dddd\n");
                            }
                            else{
                                mat[i][j]=mat[i][j-1];
                            }
                            printf("\ncaiu no elseif\n");
                        }
                        else{
                            mat[i][j]=mat[i][j-1];
                            printf("\ncaiu no else\n");
                        }
                    }
                    else if(i==pos_i){
                        printf("caiu no if 2 %d %d\n",i,j);
                        if(j==0){
                            mat[i][j+1]=mat[i][j];
                        }
                        // else if(j==tam-1){
                        //     mat[i][j]=mat[i][j-1];
                        // }
                        else{
                            mat[i][j]=mat[i][j-1];
                        }
                    }
                    else{
                        printf("caiu no if 3 %d %d\n",i,j);
                        if(j==0){
                            mat[i][j]=mat[i-1][tam-1];
                        }
                        else if(j==tam-1){
                            mat[i][j]=mat[i][j-1];
                        }
                        else{
                            mat[i][j]=mat[i][j-1];
                        }
                        
                    }
                    imprimir(mat);
                }
            }
            mat[pos_i][pos_j]=num;
        }
        total++;
        if(aux_j==tam-1){
            aux_i++;
            aux_j=0;
        }
        else{
            aux_j++;
        }
        //printf("aux_i %d aux_j %d",aux_i, aux_j);
        imprimir(mat);
    }
    
    imprimir(mat);

    return 0;
}




//outra forma:

#include <stdio.h>

void func(int mat[4][5], int i, int j){
    
    int aux=5, aux2;
    
    for(int c=0;c<=i;c++){
        if(c==i){
            aux=j;
        }
        for(int d=0;d<aux;d++){
            if(mat[i][j]<mat[c][d]){
                aux2=mat[c][d];
                mat[c][d]=mat[i][j];
                mat[i][j]=aux2;
            }
        }
    }
    
}

int main()
{
    int mat[4][5];
    
    for(int i=0;i<4;i++){
        for(int j=0;j<5;j++){
            scanf("%d",&mat[i][j]);
            func(mat,i,j);
        }
    }
    
    for(int i=0;i<4;i++){
        for(int j=0;j<5;j++){
            printf("%d\t",mat[i][j]);
        }
        printf("\n");
    }

    return 0;
}








//Desenvolva um programa que leia e imprima os valores pares
//armazenados em uma matriz 2x3.

#include <stdio.h>

int main()
{
    int m[2][3];
    for(int i=0;i<2;i++){
        for(int j=0;j<3;j++){
            printf("m[%d][%d]=",i,j);
            scanf("%d",&m[i][j]);
        }
    }
    for(int i=0;i<2;i++){
        for(int j=0;j<3;j++){
            if(m[i][j]%2==0){
                printf("%d\t",m[i][j]);
            }
        }
        printf("\n");
    }

    return 0;
}







// Faça um algoritmo para ler uma matriz 3x3 de números reais e
// depois exibir na tela o elemento do canto superior esquerdo e o
// do canto inferior direito.

#include <stdio.h>

int main()
{
    float m[3][3];
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            printf("m[%d][%d]=",i,j);
            scanf("%f",&m[i][j]);
        }
    }
    
    printf("%f\t",m[0][0]);
    printf("%f\t",m[2][2]);

    return 0;
}






// Leia os elementos de uma matriz 5x5 e imprima a soma dos
// elementos da diagonal principal.

#include <stdio.h>

void diagonal(int matriz[5][5]){
    int soma_diagonal=0,diagonal_j=4;
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            printf("%d\t",matriz[i][j]);
        }
        soma_diagonal+=matriz[i][diagonal_j];
        diagonal_j--;
        printf("\n");
    }
    
    printf("soma: %d",soma_diagonal);
}

int main()
{
    int m[5][5];
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            printf("m[%d][%d]=",i,j);
            scanf("%d",&m[i][j]);
        }
    }
    diagonal(m);

    return 0;
}









// Desenvolva um algoritmo para ler os elementos de uma matriz
// A com dimensão 2x3. Depois transfira os valores para uma
// matriz B de mesmo tamanho e tipo.

#include <stdio.h>

void transferir(int mat[2][3]){
    int mb[2][3];
    
    for(int i=0;i<2;i++){
        for(int j=0;j<3;j++){
            mb[i][j]=mat[i][j];
        }
    }
    for(int i=0;i<2;i++){
        for(int j=0;j<3;j++){
            printf("mb[%d][%d]=%d\t",i,j,mb[i][j]);
        }
        printf("\n");
    }
}

int main()
{
    int ma[2][3];
    for(int i=0;i<2;i++){
        for(int j=0;j<3;j++){
            printf("ma[%d][%d]=",i,j);
            scanf("%d",&ma[i][j]);
        }
    }
    transferir(ma);
    
    return 0;
}










1. Ler uma matriz A de ordem 5 e construir uma matriz B de mesma dimensão, onde cada elemento de B deve ser o
dobro de cada elemento correspondente da matriz A, com exceção para os valores situados na diagonal principal os
quais devem ser o triplo de cada elemento correspondente a A. Apresentar a matriz B.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main()
{
    srand(time(0));
    
    /*
        Se números aleatórios forem gerados com rand() sem primeiro chamar srand(), 
        seu programa criará a mesma sequência de números cada vez que for executado,
        srand() faz com que gere sequências diferentes a cada execução.
    */
    
    int mat[5][5], b[5][5], diagonal_j=4;
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            mat[i][j]=rand()%100;//gerando numeros de 0 a 100;
            if(j==diagonal_j){
                b[i][j]=mat[i][j]*3;
            }
            else{
                b[i][j]=mat[i][j]*2;
            }
        }
        diagonal_j--;
    }
    
    printf("\nmatriz a\n");
        
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            printf("%d\t",mat[i][j]);
        }
        printf("\n");
    }
    
    printf("\nmatriz b\n");
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            printf("%d\t",b[i][j]);
        }
        printf("\n");
    }

    return 0;
}












2. Ler uma matriz 4x3 com valores reais e mostrar qual é o elemento armazenado em uma linha L e coluna C
fornecidas pelo usuário.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main()
{
    srand(time(0));
    
    int mat[4][3], linha, coluna;
    
    for(int i=0;i<4;i++){
        for(int j=0;j<3;j++){
            mat[i][j]=rand()%10;
        }
    }
    
    printf("matriz\n");
    
    for(int i=0;i<4;i++){
        for(int j=0;j<3;j++){
            printf("%d",mat[i][j]);
        }
        printf("\n");
    }
    
    printf("\nlinha:");
    scanf("%d",&linha);
    
    printf("coluna: ");
    scanf("%d",&coluna);
    
    printf("mat[%d][%d]=%d",linha,coluna,mat[linha][coluna]);

    return 0;
}








3. Desenvolva um algoritmo que leia os elementos de uma matriz A de ordem 4 (4x4) e também de uma matriz B de
mesma ordem, gere e imprima uma matriz C com a soma dos elementos de A com B.



4. Faça um algoritmo que receba os valores para uma matriz 2x3, gere e imprima uma matriz transposta. A matriz
transposta é gerada trocando a linha pela coluna. Exemplo:

Matriz 2x3
1 9 48
2 49 658

Transposta
1 2
9 49
48 658


#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main(){
    srand(time(0));
    
    int mat[2][3], tr[3][2];
    
    for(int i=0;i<2;i++){
        for(int j=0;j<3;j++){
            mat[i][j]=rand()%10;
            printf("%d\t",mat[i][j]);
        }
        printf("\n");
    }
    
    printf("\n");
    
    for(int i=0;i<3;i++){
        for(int j=0;j<2;j++){
            tr[i][j]=mat[j][i];
            printf("%d\t",tr[i][j]);
        }
        printf("\n");
    }
}










5. Criar um programa que possa armazenar as alturas de dez atletas de 5 delegações que participarão das olimpíadas
e imprima a maior altura de cada delegação.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main()
{
    srand(time(0));
    
    float mat[5][10], maior_altura=0;
    
    for(int i=0;i<5;i++){
        for(int j=0;j<10;j++){
            mat[i][j]=rand()%100;
        }
    }
    
    printf("matriz\n");
    
    for(int i=0;i<5;i++){
        printf("delegação %d: \t",i+1);
        for(int j=0;j<10;j++){
            printf("%.2f\t",mat[i][j]);
        }
        printf("\n");
    }
    
    for(int i=0;i<5;i++){
        maior_altura=0;
        for(int j=0;j<10;j++){
            if(mat[i][j] > maior_altura){
                maior_altura = mat[i][j];
            }
        }
        printf("delegação %d maior_altura: %.2f \t\n",i+1,maior_altura);
    }
    

    return 0;
}








6. Fazer um programa que leia os elementos de uma matriz inteira de ordem 5 (ou seja 5x5) e escreva os elementos
da matriz, que estão acima da diagonal secundária (triângulo superior).

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main()
{
    srand(time(0));
    
    int mat[5][5];
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            mat[i][j]=rand()%100;
        }
    }
    
    printf("matriz\n");
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            printf("%d\t",mat[i][j]);
        }
        printf("\n");
    }
    
    printf("\n");
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            if(j > i){
                printf("%d\t",mat[i][j]);
            }
            else{
                printf("\t");
            }
        }
        printf("\n");
    }
    

    return 0;
}








7. Criar uma matriz 3x4 onde cada elemento é a soma dos índices da sua posição dentro da matriz.


8. Faça um algoritmo para ler duas matrizes reais A e B de ordem 5, e criar uma matriz C de modo que: cij = 1, se a ij da
matriz A existe em algum lugar na matriz B; cij = 0, se a ij da matriz A não existir em B.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void main(){
    srand(time(0));
    
    int a[5][5], b[5][5], c[5][5];
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            a[i][j]=rand()%100;
            b[i][j]=rand()%100;
        }
    }
    
    printf("\nmatriz a\n");
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            printf("%d\t",a[i][j]);
        }
        printf("\n");
    }
    
    printf("\nmatriz b\n");
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            printf("%d\t",b[i][j]);
        }
        printf("\n");
    }
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            for(int k=0;k<5;k++){
                for(int l=0;l<5;l++){
                    if(a[i][j]==b[k][l]){
                        c[k][l]=1;
                        //printf("%d existe em b\t",a[i][j]);
                    }
                    // else{
                    //     c[k][l]=0;
                    // }
                }
            }
        }
    }
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            if(c[i][j]!=1){
                c[i][j]=0;
            }
        }
    }
    
    printf("\nmatriz c\n");
    
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            printf("%d\t",c[i][j]);
        }
        printf("\n");
    }
    
}











9. A empresa Pregotex Inc. possui uma tabela para representar as vendas dos seus produtos (em barris) durante o
ano. Cada linha representa um produto e as colunas são os meses do ano. Veja o exemplo:
Produto jan fev mar ... dez
Prego 1200 1250 1000 ... 1280
Porca 3100 3150 3500 ... 2354
Parafuso 3000 2500 2845 ... 1584
Faça um algoritmo que leia uma tabela deste tipo e depois escreva: a) o total de venda anual de cada produto; b) o
total de venda da empresa em cada mês.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void main(){
    srand(time(0));
    
    int mat[3][12], soma_ano, soma_mes;
    
    for(int i=0;i<3;i++){
        soma_ano=0;
        for(int j=0;j<12;j++){
            mat[i][j]=rand()%10;
            soma_ano+=mat[i][j];
            printf("%d\t",mat[i][j]);
        }
        printf("soma ano %d: %d\n",i+1,soma_ano);
    }
    
    printf("\n");
    
    for(int i=0;i<12;i++){
        soma_mes=0;
        for(int j=0;j<3;j++){
            printf("%d\t",mat[j][i]);
            soma_mes+=mat[j][i];
        }
        printf("soma mes %d: %d\n",i+1,soma_mes);
    }
}











10. Faça um programa para ler dois vetores A e B de 5 elementos cada. Depois construa uma matriz C de 2 dimensões,
em que a primeira coluna deve ser formada pelos elementos do vetor A e a segunda coluna formada pelos
elementos do vetor B. Apresentar a matriz C.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void main(){
    srand(time(0));
    
    int a[5], b[5], mat[5][2];
    
    for(int i=0;i<5;i++){
        a[i]=rand()%10;
        b[i]=rand()%10;
    }
    
    for(int i=0;i<5;i++){
        printf("vetor A[%d]=%d\t",i,a[i]);
    }
    
    printf("\n");
    
    for(int i=0;i<5;i++){
        printf("vetor B[%d]=%d\t",i,b[i]);
    }
    
    printf("\n");
    
    for(int i=0;i<2;i++){
        for(int j=0;j<5;j++){
            if(i==0){
                mat[j][i]=a[j];
            }
            else{
                mat[j][i]=b[j];
            }
        }
    }
    
    printf("\nmatriz\n");
    
    for(int i=0;i<5;i++){
        for(int j=0;j<2;j++){
            printf("%d\t",mat[i][j]);
        }
        printf("\n");
    }
    
}










11. Ler duas matrizes A e B 4x5. A matriz A deve ser formada por valores que sejam divisíveis por 3 e 4, enquanto a
matriz B deve ser formada por valores que sejam divisíveis por 5 e 6. As entradas dos valores nas matrizes devem
ser validadas pelo programa e não pelo usuário. Construir e apresentar uma matriz C de mesma dimensão que
contenha a subtração dos elementos da matriz A e B.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main()
{
    srand(time(0));
    
    int a[4][5], b[4][5];
    
    for(int i=0;i<4;i++){
        for(int j=0;j<5;j++){
            int c = rand()%100;
            int d = rand()%100;
            
            while(c%3!=0 || c%4!=0){
                c=rand()%100;
            }
            a[i][j]=c;
            
            while(d%5!=0 || d%6!=0){
                d=rand()%100;
            }
            b[i][j]=d;
        }
    }
    
    printf("matriz A somente com divisores de 3 e 4\n");
    
    for(int i=0;i<4;i++){
        for(int j=0;j<5;j++){
            printf("a[%d][%d]=%d\t",i,j,a[i][j]);
        }
        printf("\n");
    }
    
    printf("\nmatriz B somente com divisores de 5 e 6\n");
    
    for(int i=0;i<4;i++){
        for(int j=0;j<5;j++){
            printf("b[%d][%d]=%d\t",i,j,b[i][j]);
        }
        printf("\n");
    }
    

    return 0;
}





//GERAR NUMEROS ENTRE 100 E 200: GERAR UM NUMERO ENTRE 0 E 100 E DEPOIS SOMAR +100
